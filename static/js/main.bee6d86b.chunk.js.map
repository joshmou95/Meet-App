{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showDetails","setState","event","this","props","className","summary","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","eventNumber","mockData","kind","etag","status","created","updated","creator","email","self","organizer","start","dateTime","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"2PAsCeA,E,4MAnCbC,MAAQ,CACNC,aAAa,G,EAGfA,YAAc,WACZ,EAAKC,SAAS,CACZD,aAAc,EAAKD,MAAMC,e,4CAI7B,WAEE,IAAQE,EAAUC,KAAKC,MAAfF,MAER,OAAO,sBAAKG,UAAU,QAAf,UACL,oBAAIA,UAAU,OAAd,SAAsBH,EAAMI,UAE5B,mCAEOJ,EAAMI,QAFb,MAEyBJ,EAAMK,YAG9BJ,KAAKJ,MAAMC,aACV,sBAAKK,UAAU,gBAAf,UACE,8CACA,mBAAGG,KAAMN,EAAMO,SAAf,4CACC,mBAAGJ,UAAU,cAAb,SAA4BH,EAAMQ,iBAIvC,wBAAQL,UAAU,cAAcM,QAASR,KAAKH,YAA9C,SAA4DG,KAAKJ,MAAMC,YAAc,eAAiB,wB,GA/BxFY,aCiBLC,E,4JAfb,WAEE,IAAQC,EAAWX,KAAKC,MAAhBU,OACR,OACE,oBAAIT,UAAU,YAAd,SACGS,EAAOC,KAAI,SAAAb,GAAK,OACf,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMc,a,GAPDJ,aCqDTK,E,4MArDblB,MAAQ,CACNmB,MAAO,GACPC,YAAa,GACbC,qBAAiBC,G,EAGnBC,mBAAqB,SAACpB,GACpB,IAAMqB,EAAQrB,EAAMsB,OAAOD,MACrBJ,EAAc,EAAKf,MAAMqB,UAAUC,QAAO,SAACnB,GAC/C,OAAOA,EAASoB,cAAcC,QAAQL,EAAMI,gBAAkB,KAEhE,EAAK1B,SAAS,CACZiB,MAAOK,EACPJ,iB,EAIJU,kBAAoB,SAACC,GACnB,EAAK7B,SAAS,CACZiB,MAAOY,EACPV,iBAAiB,IAGnB,EAAKhB,MAAM2B,aAAaD,I,4CAG1B,WAAU,IAAD,OACP,OACE,sBAAKzB,UAAU,aAAf,UACE,uBACE2B,KAAK,OACL3B,UAAU,OACVkB,MAAOpB,KAAKJ,MAAMmB,MAClBe,SAAU9B,KAAKmB,mBACfY,QAAS,WAAO,EAAKjC,SAAS,CAAEmB,iBAAiB,OAGnD,qBAAIf,UAAU,cAAc8B,MAAOhC,KAAKJ,MAAMqB,gBAAkB,GAAI,CAAEgB,QAAS,QAA/E,UACGjC,KAAKJ,MAAMoB,YAAYJ,KAAI,SAACe,GAAD,OAC1B,oBAEAnB,QAAS,kBAAM,EAAKkB,kBAAkBC,IAFtC,SAGEA,GAFGA,MAIP,oBAAInB,QAAS,kBAAM,EAAKkB,kBAAkB,QAA1C,SACE,2D,GA9CajB,aC2BVyB,E,4MA1BbtC,MAAQ,CACNuC,YAAa,I,EAGfhB,mBAAqB,SAACpB,GACpB,IAAMqB,EAAQrB,EAAMsB,OAAOD,MAC3B,EAAKtB,SAAS,CACZqC,YAAaf,K,4CAIjB,WACE,OACE,qBAAKlB,UAAU,iBAAf,SACE,uBACE2B,KAAK,SACL3B,UAAU,eACVkB,MAAOpB,KAAKJ,MAAMuC,YAClBL,SAAU9B,KAAKmB,2B,GAnBIV,a,+BCFvB2B,EAAW,CACf,CACEC,KAAK,iBACLC,KAAK,qBACLzB,GAAG,8CACH0B,OAAO,YACPjC,SAAS,oJACTkC,QAAQ,2BACRC,QAAQ,2BACRtC,QAAQ,mBACRI,YAAY,uWACZH,SAAS,aACTsC,QAAQ,CACNC,MAAM,oCACNC,MAAK,GAEPC,UAAU,CACRF,MAAM,oCACNC,MAAK,GAEPE,MAAM,CACJC,SAAS,4BACTC,SAAS,iBAEXC,IAAI,CACFF,SAAS,4BACTC,SAAS,iBAEXE,iBAAiB,6BACjBC,kBAAkB,CAChBJ,SAAS,4BACTC,SAAS,iBAEXI,QAAQ,wCACRC,SAAS,EACTC,UAAU,CACRC,YAAW,GAEbC,UAAU,WAEV,CACAnB,KAAK,iBACLC,KAAK,qBACLzB,GAAG,8CACH0B,OAAO,YACPjC,SAAS,oJACTkC,QAAQ,2BACRC,QAAQ,2BACRtC,QAAQ,eACRI,YAAY,mSACZH,SAAS,kBACTsC,QAAQ,CAACC,MAAM,oCACfC,MAAK,GACLC,UAAU,CAACF,MAAM,oCACjBC,MAAK,GACLE,MAAM,CAACC,SAAS,4BAChBC,SAAS,iBACTC,IAAI,CAACF,SAAS,4BACdC,SAAS,iBACTE,iBAAiB,6BACjBC,kBAAkB,CAACJ,SAAS,4BAC5BC,SAAS,iBACTI,QAAQ,wCACRC,SAAS,EAAEC,UAAU,CAACC,YAAW,GACjCC,UAAU,Y,iCCnDDC,EAAmB,SAAC9C,GAC/B,IAAI8C,EAAmB9C,EAAOC,KAAI,SAACb,GAAD,OAAWA,EAAMK,YAEnD,OADa,YAAO,IAAIsD,IAAID,KAKxBE,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACIC,MAAM,+DAAD,OACuCF,IAE9DG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMF,UALT,cACXG,EADW,yBAMVA,GANU,2CAAH,sDASHC,EAAS,uCAAG,kCAAAR,EAAA,yDACvBS,IAAUxB,SAENyB,OAAOnE,SAASC,KAAKmE,WAAW,oBAHb,uBAIrBF,IAAUG,OAJW,kBAKdrC,GALc,uBAQHsC,IARG,YAQjBC,EARiB,gCAWrBC,IACMC,EAAM,6EAAoFF,EAZ3E,UAaAG,IAAMC,IAAIF,GAbV,eAafT,EAbe,QAcVY,OACL1D,EAAYmC,EAAiBW,EAAOY,KAAKrE,QAC7CsE,aAAaC,QAAQ,aAAcC,KAAKC,UAAUhB,EAAOY,OACzDC,aAAaC,QAAQ,YAAaC,KAAKC,UAAU9D,KAEnDgD,IAAUG,OAnBW,kBAoBdL,EAAOY,KAAKrE,QApBE,4CAAH,qDA0BhBiE,EAAc,WAClB,GAAIL,OAAOc,QAAQC,WAAaf,OAAOnE,SAASmF,SAAU,CACxD,IAAIC,EACFjB,OAAOnE,SAASqF,SAChB,KACAlB,OAAOnE,SAASsF,KAChBnB,OAAOnE,SAASmF,SAClBhB,OAAOc,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASjB,OAAOnE,SAASqF,SAAW,KAAOlB,OAAOnE,SAASsF,KAC3DnB,OAAOc,QAAQC,UAAU,GAAI,GAAIE,IAIxBd,EAAc,uCAAG,sCAAAb,EAAA,yDACtBD,EAAcqB,aAAaU,QAAQ,gBADb,KAET/B,GAFS,qCAEaD,EAAWC,GAFxB,6BAEtBgC,EAFsB,KAIvBhC,IAAegC,EAAWzB,MAJH,kCAKpBc,aAAaY,WAAW,gBALJ,eAMpBC,EAAe,IAAIC,gBAAgBxB,OAAOnE,SAAS4F,QAN/B,UAOPF,EAAaf,IAAI,QAPV,WAOpBkB,EAPoB,yCAUFnB,IAAMC,IAC1B,+EAXsB,eAUlBmB,EAVkB,OAahBC,EAAYD,EAAQlB,KAApBmB,QAbgB,kBAchB5B,OAAOnE,SAASC,KAAO8F,GAdP,iCAgBnBF,GAAQG,EAASH,IAhBE,iCAkBrBrC,GAlBqB,4CAAH,qDAuBrBwC,EAAQ,uCAAG,WAAOH,GAAP,mBAAApC,EAAA,6DACTwC,EAAaC,mBAAmBL,GADvB,SAEgBnC,MAC7B,wEAA+EuC,GAE9EtC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAACC,GAAD,OAAWA,KARL,wBAEPoC,EAFO,EAEPA,eAQQtB,aAAaC,QAAQ,eAAgBqB,GAVtC,kBAYRA,GAZQ,2CAAH,sDCzCCC,G,kNA1Cb5G,MAAQ,CACNe,OAAQ,GACRW,UAAW,I,EAiBbM,aAAe,SAACxB,GACdiE,IAAYN,MAAK,SAACpD,GAEhB,IAAM8F,EAA+B,QAAbrG,EACtBO,EACFA,EAAOY,QAAO,SAACxB,GAAD,OAAWA,EAAMK,WAAaA,KAC5C,EAAKN,SAAS,CACZa,OAAQ8F,Q,uDArBd,WAAqB,IAAD,OAClBzG,KAAK0G,SAAU,EACfrC,IAAYN,MAAK,SAACpD,GACZ,EAAK+F,SAET,EAAK5G,SAAS,CAAEa,SAAQW,UAAWmC,EAAiB9C,U,kCAKxD,WACEX,KAAK0G,SAAU,I,oBAejB,WACE,OACE,sBAAKxG,UAAU,MAAf,UACE,cAAC,EAAD,CAAYoB,UAAWtB,KAAKJ,MAAM0B,UAAWM,aAAc5B,KAAK4B,eAChE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWjB,OAAQX,KAAKJ,MAAMe,gB,GArCpBF,cCIEkG,QACW,cAA7BpC,OAAOnE,SAASwG,UAEe,UAA7BrC,OAAOnE,SAASwG,UAEhBrC,OAAOnE,SAASwG,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9D,MAAK,SAAC+D,GACLA,EAAaC,gBAEd7D,OAAM,SAACC,GACN6D,QAAQ7D,MAAMA,EAAM8D,YE9G5BnB,M","file":"static/js/main.bee6d86b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    showDetails: false\n  }\n\n  showDetails = () => {\n    this.setState({\n      showDetails: !this.state.showDetails\n    })\n  }\n\n  render() {\n    // props passed from EventList Component\n    const { event } = this.props;\n\n    return <div className='event'>\n      <h1 className='name'>{event.summary}</h1>\n\n      <p>\n      {/* {event.start.dateTime}<br /> */}\n          @ {event.summary} | {event.location}\n      </p>\n\n      {this.state.showDetails && (\n        <div className='event-details'>\n          <h3>About event:</h3>\n          <a href={event.htmlLink}>See Details on Google Calendar</a>\n           <p className='description'>{event.description}</p>\n        </div>\n      )}\n\n      <button className='details-btn' onClick={this.showDetails}>{this.state.showDetails ? 'Hide Details' : 'Show Details'}</button>\n    </div>\n  }\n}\n\nexport default Event;","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    // props passed from App Component\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({ \n      query: value,\n      suggestions,\n     });\n  }\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    // pass the clicked suggestion to the passed updateEvents prop\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input \n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {this.setState({ showSuggestions: true }) }}\n        />\n        {/* if showSuggestions is ture the list will be visible, otherwise not */}\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li \n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    eventNumber: 32,\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ \n      eventNumber: value,\n     });\n  }\n\n  render() {\n    return (\n      <div className='numberOfEvents'>\n        <input \n          type=\"number\"\n          className='event-number'\n          value={this.state.eventNumber}\n          onChange={this.handleInputChanged}\n        />\n        \n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    kind:\"calendar#event\",\n    etag:\"\\\"3181161784712000\\\"\",\n    id:\"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status:\"confirmed\",\n    htmlLink:\"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created:\"2020-05-19T19:17:46.000Z\",\n    updated:\"2020-05-27T12:01:32.356Z\",\n    summary:\"Learn JavaScript\",\n    description:\"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location:\"London, UK\",\n    creator:{\n      email:\"fullstackwebdev@careerfoundry.com\",\n      self:true\n    },\n    organizer:{\n      email:\"fullstackwebdev@careerfoundry.com\",\n      self:true\n    },\n    start:{\n      dateTime:\"2020-05-19T16:00:00+02:00\",\n      timeZone:\"Europe/Berlin\"\n    },\n    end:{\n      dateTime:\"2020-05-19T17:00:00+02:00\",\n      timeZone:\"Europe/Berlin\"\n    },\n    recurringEventId:\"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime:{\n      dateTime:\"2020-05-19T16:00:00+02:00\",\n      timeZone:\"Europe/Berlin\"\n    },\n    iCalUID:\"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence:0,\n    reminders:{\n      useDefault:true\n    },\n    eventType:\"default\"\n  },\n    {\n    kind:\"calendar#event\",\n    etag:\"\\\"3181159875584000\\\"\",\n    id:\"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status:\"confirmed\",\n    htmlLink:\"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created:\"2020-05-19T19:14:30.000Z\",\n    updated:\"2020-05-27T11:45:37.792Z\",\n    summary:\"React is Fun\",\n    description:\"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location:\"Berlin, Germany\",\n    creator:{email:\"fullstackwebdev@careerfoundry.com\",\n    self:true},\n    organizer:{email:\"fullstackwebdev@careerfoundry.com\",\n    self:true},\n    start:{dateTime:\"2020-05-20T14:00:00+02:00\",\n    timeZone:\"Europe/Berlin\"},\n    end:{dateTime:\"2020-05-20T15:00:00+02:00\",\n    timeZone:\"Europe/Berlin\"},\n    recurringEventId:\"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime:{dateTime:\"2020-05-20T14:00:00+02:00\",\n    timeZone:\"Europe/Berlin\"},\n    iCalUID:\"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence:0,reminders:{useDefault:true},\n    eventType:\"default\"\n  }\n];\n// mockData = JSON.parse(JSON.stringify(mockData));\nexport { mockData };","import { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from \"nprogress\";\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\n// check whether token is valid or not, redirect if not. \nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n  return result;\n}\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://patiz736v9.execute-api.us-west-2.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\n// check whether there's a path, then build the URL with the current path \n// or build the URL without a path using window.history.pushState()\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  // if no token is found check for auth code\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    // if no auth code is found redirect to Authorization screen\n    if (!code) {\n      const results = await axios.get(\n        \"https://patiz736v9.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\n\n// encodes the code using encodeURIComponent then used the code to get token\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://patiz736v9.execute-api.us-west-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n  \n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n      // make API call and save initial data to state\n      this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      // check if value is 'all'\n      const locationEvents = (location === 'all') \n      ? events :\n      events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n// entry point of the build\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}